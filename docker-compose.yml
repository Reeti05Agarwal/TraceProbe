version: '3.8'

services:
  zookeeper:
    # ... (no changes here)
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ipdr-network

  kafka:
    # ... (no changes here)
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ipdr-network

  elasticsearch:
    # ... (no changes here)
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    networks:
      - ipdr-network

  kibana:
    # ... (no changes here)
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ipdr-network

  # --- NEW SERVICES FOR YOUR PYTHON APPS ---
  
  producer:
    build:
      context: ./ipdr_analyzer/producer
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      - kafka
    networks:
      - ipdr-network
    env_file:
      - .env 
    # --- ADD THIS SECTION ---
    volumes:
      - ./data:/data
    # --- END SECTION ---
    restart: unless-stopped

  processor:
    # ... (no changes here)
    build:
      context: ./ipdr_analyzer/processor
      dockerfile: Dockerfile
    container_name: processor
    depends_on:
      - kafka
    networks:
      - ipdr-network
    env_file:
      - .env
    restart: unless-stopped

  consumer:
    # ... (no changes here)
    build:
      context: ./ipdr_analyzer/consumer
      dockerfile: Dockerfile
    container_name: consumer
    depends_on:
      - kafka
      - elasticsearch
    networks:
      - ipdr-network
    env_file:
      - .env
    restart: unless-stopped

networks:
  ipdr-network:
    driver: bridge
